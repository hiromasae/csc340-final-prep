
(a) Given the exact growth calculation 7000 + 3N + 2/3N^3, what is the Big-O notation?
      
O(N^3)


In the following code, assume the variable size represents number of items of data in the program.

double getAvgInit(int nums[], int size) {   
  int sum = 0;                            // once
  double avg;                             // once

  for (int i = 0; i < size; i++) {        // once, N, N 
    sum = sum + nums[i];                  // N
    for (int j = 0; j < size; j++) {      // N, N^2, N^2 
      cout << nums[j] << " ";             // N^2   
    }
    cout << endl;                         // N
  }

  for (int i = 0; i < size; i++) {        // once, N, N 
    nums[i] = 0;                          // N
  }
  avg = sum / size;                       // once

  return avg;                             // once
} //end getSum()


(b) In the code above, label the statements that occur only once, N times, N^2 times, and N^3 times.
    Note: if a statement occurs N +- 1 times, for our purposes that is N times. Don't count the 
    function declaration.


(c) What is the exact growth calculation for the code above?
      
6 + 8N + 3N^2


(d) What is the Big-O notation for the code above?

O(N^2)
